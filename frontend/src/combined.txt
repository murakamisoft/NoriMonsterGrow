以下が最新のソース一覧
----- C:\workspace\NoriMonsterGrow\frontend\src\App.jsx ----- 
import React from 'react';
import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';
import Home from './pages/Home';
import MonsterImages from './components/MonsterImages';

const App = () => {
  const playerId = 1; // プレイヤーIDを指定

  return (
    <div>
      <h1>NoriMonsterGrow</h1>
      <MonsterImages playerId={playerId} />
    </div>
  );
};

export default App;
   
----- C:\workspace\NoriMonsterGrow\frontend\src\components\MonsterDisplay.jsx ----- 
import React from 'react';
import useMonster from '../hooks/useMonster';

const MonsterDisplay = ({ playerId }) => {
  const { monster, loading, error } = useMonster(playerId);

  if (loading) return <p>Loading...</p>;
  if (error) return <p>Error loading monster data.</p>;

  const { image } = monster;
  const imageSrc = `/img/monster.png`;  // 画像ファイルパス
  const spriteStyle = {
    backgroundImage: `url(${imageSrc})`,
    backgroundPosition: `-${image.x}px -${image.y}px`,
    width: '64px',
    height: '64px',
  };

  return (
    <div>
      <h2>{monster.name}</h2>
      <div style={spriteStyle} />
    </div>
  );
};

export default MonsterDisplay;
   
----- C:\workspace\NoriMonsterGrow\frontend\src\components\MonsterImages.jsx ----- 
import React, { useEffect, useState } from 'react';
import axios from 'axios';

const MonsterImages = ({ playerId }) => {
  const [monsterImages, setMonsterImages] = useState([]);

  useEffect(() => {
    const fetchMonsterImages = async () => {
      try {
        const response = await axios.get(`http://localhost:8080/api/monster-images/player/${playerId}`);
        setMonsterImages(response.data);
      } catch (error) {
        console.error('Error fetching monster images:', error);
      }
    };

    fetchMonsterImages();
  }, [playerId]);

  return (
    <div>
      <h2>モンスターの画像</h2>
      <div style={{ position: 'relative', width: '1024px', height: '1024px' }}>
        <img src="/img/monster.png" alt="Monster" width="1024" height="1024" />
        {monsterImages.map((monster) => (
          <div
            key={monster.monsterImgId}
            style={{
              position: 'absolute',
              left: monster.pixelX,
              top: monster.pixelY,
              width: '64px',
              height: '64px',
              overflow: 'hidden',
            }}
          >
            <img
              src="/img/monster.png"
              alt="Monster"
              style={{
                position: 'relative',
                left: `-${monster.pixelX}px`,
                top: `-${monster.pixelY}px`,
                width: '1024px',
                height: '1024px',
              }}
            />
          </div>
        ))}
      </div>
    </div>
  );
};

export default MonsterImages;
   
----- C:\workspace\NoriMonsterGrow\frontend\src\hooks\useMonster.jsx ----- 
import { useState, useEffect } from 'react';
import axios from 'axios';

const useMonster = (playerId) => {
  const [monster, setMonster] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchMonsterData = async () => {
      try {
        const monsterResponse = await axios.get(`/api/monsters/player/${playerId}`);
        const monster = monsterResponse.data;
        const imageResponse = await axios.get(`/api/monster-images/${monster.imageId}`);
        const imageData = imageResponse.data;

        setMonster({ ...monster, image: imageData });
      } catch (err) {
        setError(err);
      } finally {
        setLoading(false);
      }
    };

    fetchMonsterData();
  }, [playerId]);

  return { monster, loading, error };
};

export default useMonster;
   
----- C:\workspace\NoriMonsterGrow\frontend\src\pages\Home.jsx ----- 
import React, { useEffect, useState } from 'react';
import { Link } from 'react-router-dom'; // Link をインポート
import '../css/Home.css'; // スタイルを追加する場合に備えて

const Home = () => {
  const [player, setPlayer] = useState(null);
  const [monsters, setMonsters] = useState([]);

  const playerId = 1; // プレイヤーID（適宜変更してください）

  useEffect(() => {
    const fetchPlayerData = async () => {
      try {
        const response = await fetch(`http://localhost:8080/api/players/${playerId}`);
        if (!response.ok) {
          const errorMessage = await response.text(); // エラーメッセージを取得
          console.error('Error:', errorMessage); // エラーメッセージをコンソールに表示
          throw new Error('ネットワークエラー');
        }
        const data = await response.json();
        console.log("fetchPlayerData : " + JSON.stringify(data));
        setPlayer(data);
      } catch (error) {
        console.error('Fetch player data failed:', error);
      }
    };


    const fetchMonstersData = async () => {
      try {
        const response = await fetch(`http://localhost:8080/api/monsters?playerId=${playerId}`);
        if (!response.ok) {
          throw new Error('ネットワークエラー');
        }
        const data = await response.json();
        console.log("fetchMonstersData : " + JSON.stringify(data));
        setMonsters(data);
      } catch (error) {
        console.error(error);
      }
    };

    fetchPlayerData();
    fetchMonstersData();
  }, [playerId]);

  if (!player) {
    return <div>ローディング中...</div>; // プレイヤーデータが取得できるまでのローディング表示
  }

  return (
    <div className="container">
      <header className="py-4 text-center">
        <h1>NoriMonsterGrow</h1>
        <h2>{player.playerName}</h2>
        <p>レベル: {player.lv}</p>
        <div className="progress" style={{ height: '20px' }}>
          <div
            className="progress-bar"
            role="progressbar"
            style={{ width: `${(player.experience / 2000) * 100}%` }}
            aria-valuenow={player.experience}
            aria-valuemin="0"
            aria-valuemax="2000"
          >
            {player.experience} / 2000
          </div>
        </div>
      </header>

      <div className="row my-4">
        {monsters.map((monster, index) => (
          <div className="col-md-4" key={index}>
            <div className="card mb-4">
              <img
                src={`https://via.placeholder.com/150?text=${monster.name}`}
                className="card-img-top"
                alt={monster.name}
              />
              <div className="card-body">
                <h5 className="card-title">{monster.name}</h5>
                <p className="card-text">レベル: {monster.level}</p>
                <p className="card-text">HP: {monster.hp}</p>
              </div>
            </div>
          </div>
        ))}
      </div>

      <nav className="mt-4">
        <h4>メインメニュー</h4>
        <ul className="list-group">
          <li className="list-group-item">
            <Link to="/育成" className="nav-link">モンスター育成</Link>
          </li>
          <li className="list-group-item">
            <Link to="/カスタマイズ" className="nav-link">カスタマイズ</Link>
          </li>
          <li className="list-group-item">
            <Link to="/バトル" className="nav-link">バトル</Link>
          </li>
          <li className="list-group-item">
            <Link to="/特訓" className="nav-link">特訓</Link>
          </li>
          <li className="list-group-item">
            <Link to="/アルバム" className="nav-link">アルバム</Link>
          </li>
          <li className="list-group-item">
            <Link to="/図鑑" className="nav-link">図鑑</Link>
          </li>
          <li className="list-group-item">
            <Link to="/イベント" className="nav-link">イベント</Link>
          </li>
          <li className="list-group-item">
            <Link to="/設定" className="nav-link">設定</Link>
          </li>
        </ul>
      </nav>

      <footer className="text-center mt-4">
        <p>© 2024 NoriMonsterGrow. All rights reserved.</p>
      </footer>
    </div>
  );
};

export default Home;
   
----- C:\workspace\NoriMonsterGrow\frontend\src\pages\PlayerMonsters.jsx ----- 
import React from 'react';
import MonsterDisplay from '../components/MonsterDisplay';

const PlayerMonsters = ({ playerId }) => {
  return (
    <div>
      <h1>Player's Monsters</h1>
      <MonsterDisplay playerId={playerId} />
    </div>
  );
};

export default PlayerMonsters;
   
----- C:\workspace\NoriMonsterGrow\frontend\src\App.css ----- 
.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
   
----- C:\workspace\NoriMonsterGrow\frontend\src\index.css ----- 
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}
   
----- C:\workspace\NoriMonsterGrow\frontend\src\css\Home.css ----- 
.container {
  background-color: #f8f9fa;
  border-radius: 5px;
  padding: 20px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.card {
  text-align: center;
}   
